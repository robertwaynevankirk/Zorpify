# File: Zorpify/custom/nginx/nginx.conf

# User and worker configurations
user  nginx;
worker_processes  16;  # Adjusted based on 16-core processor

events {
    worker_connections  4096;  # Increased for high concurrency
    multi_accept on;  # Allows a worker to accept multiple connections at once
}

http {
    # Basic Settings
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    access_log  /var/log/nginx/access.log  combined;
    error_log   /var/log/nginx/error.log warn;

    # Gzip Compression Optimization
    gzip on;
    gzip_disable "msie6";

    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;  # Increased compression level for better optimization
    gzip_buffers 32 16k;  # Increased buffer sizes
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;

    # Client Max Body Size
    client_max_body_size 100M;  # Increased to accommodate larger uploads if needed

    # Security Headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Content-Security-Policy "default-src 'self'";
    add_header Referrer-Policy "no-referrer-when-downgrade";

    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=high_limit:10m rate=1000r/m;  # Very high rate limit
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # Server Configuration for HTTP
    server {
        listen       80;
        server_name  localhost;  # Change if you obtain a domain

        # Redirect HTTP to HTTPS
        return 301 https://$host$request_uri;
    }

    # Server Configuration for HTTPS
    server {
        listen       443 ssl http2;  # Enabled HTTP/2
        server_name  localhost;  # Change if you obtain a domain

        # SSL Configuration
        ssl_certificate     /etc/nginx/ssl/self-signed.crt;
        ssl_certificate_key /etc/nginx/ssl/self-signed.key;

        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256';
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:50m;
        ssl_session_timeout 1h;

        # Optional Security Enhancements
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;

        # Proxy Settings with Optimized Performance
        upstream api_upstream {
            server api:3080;
            keepalive 32;  # Increased keepalive connections
        }

        # Basic Failover Mechanism
        upstream api_failover {
            server api:3080;
            server api_backup:3080;  # Add a backup server if available
            keepalive 32;
        }

        location / {
            proxy_pass http://api_upstream;  # Use the optimized upstream
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_buffering on;
            proxy_buffers 64 16k;  # Increased buffers for high performance
            proxy_buffer_size 32k;
            proxy_busy_buffers_size 64k;
            proxy_temp_file_write_size 64k;

            proxy_read_timeout 300s;  # More generous read timeout
            proxy_send_timeout 300s;  # More generous send timeout

            # Rate Limiting
            limit_req zone=high_limit burst=500 nodelay;  # Extremely high burst limit
            limit_conn addr 1000;  # Very high concurrent connections per IP
        }

        # Serve Static Assets with Generous Caching
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|webp)$ {
            expires 365d;
            add_header Cache-Control "public, no-transform";
        }

        # Error Pages
        error_page  404              /404.html;
        location = /404.html {
            root   /usr/share/nginx/html;
            internal;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
            internal;
        }

        # Basic Failover Handling (Unrelated to Docker Health Checks)
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 3;
    }
}
